# docker-compose.yml
x-defaults: &defaults
  restart: always

services:
  # this caddy uses HTTP/TLS challenges (requiring port 443 access)
  #  not building modules for duckdns saves a bit of time here
  caddy:
    image: caddy:2
    ports:
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./logs:/var/log/caddy
    configs:
      - source: caddy_config
        target: /etc/caddy/Caddyfile
    networks:
      - web
    <<: *defaults
  duckdns-updater:
    build:
      context: .
      dockerfile_inline: |
        FROM alpine:3.19
        RUN apk add --no-cache curl jq
        COPY update-dns.sh /
        RUN chmod +x /update-dns.sh
        CMD ["/update-dns.sh"]
    environment:
      - DUCKDNS_DOMAIN=${DUCKDNS_DOMAIN}
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN}
    networks:
      - web
    <<: *defaults
  
  ssh-tunnel-destiny:
    build:
      context: .
      dockerfile_inline: |
        FROM alpine:3.19
        RUN apk add --no-cache \
            openssh-server \
            curl \
            bind-tools \
            iputils \
            iproute2 && \
            mkdir /run/sshd && \
            mkdir -p /root/.ssh
        RUN ssh-keygen -A
        COPY env_to_authorized_keys.sh /root/
        RUN chmod +x /root/env_to_authorized_keys.sh
        RUN sed -i '/^AllowTcpForwarding no/d; /^GatewayPorts no/d' /etc/ssh/sshd_config && \
            echo "AllowTcpForwarding yes" >> /etc/ssh/sshd_config && \
            echo "GatewayPorts yes" >> /etc/ssh/sshd_config && \
            echo "PasswordAuthentication no" >> /etc/ssh/sshd_config
          # < these seem not to work, though sshd -d -e ... did (but very noisy)
          # echo "LogLevel VERBOSE" >> /etc/ssh/sshd_config && \
          # echo "SyslogFacility AUTH" >> /etc/ssh/sshd_config
        CMD ["/bin/sh", "-c", "/root/env_to_authorized_keys.sh && /usr/sbin/sshd -D -p 2023"]
    environment:
      - SSH_PUBLIC_KEY=${SSH_PUBLIC_KEY}
    ports:
      - "2023:2023"
    networks:
      - web
    <<: *defaults

volumes:
  caddy_data:
  caddy_config:

networks:
  web:

configs:
  caddy_config:
    content: |
      voulais.duckdns.org {
          encode zstd gzip
          handle {
              reverse_proxy ssh-tunnel-destiny:3000
          }
          header {
              Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
              X-Content-Type-Options "nosniff"
              X-XSS-Protection "1; mode=block"
              X-Frame-Options "DENY"
          }
          log {
              output file /var/log/caddy/access.log
              format console
          }
      }