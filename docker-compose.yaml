x-defaults: &defaults
  restart: always

services:
  caddy:
    build:
      context: .
      dockerfile_inline: |
        FROM caddy:2-builder AS builder
        RUN xcaddy build --with github.com/caddy-dns/duckdns

        FROM caddy:2
        COPY --from=builder /usr/bin/caddy /usr/bin/caddy
    ports:
      - "9080:80"
      - "9443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./logs:/var/log/caddy
    configs:
      - source: caddy_config
        target: /etc/caddy/Caddyfile
    environment:
      - DUCKDNS_API_TOKEN=${DUCKDNS_API_TOKEN}
    depends_on:
      cos-jamo:
        condition: service_healthy
    networks:
      - web
    <<: *defaults
    
  cos-jamo:
    build:
      context: .
      dockerfile_inline: |
        FROM node:20-slim
        WORKDIR /app
        COPY package*.json ./
        RUN npm ci
        COPY . .
        EXPOSE 3000
    volumes:
      - .:/app:exec
      # Prevent the container's node_modules from being overwritten by the host
      - /app/node_modules
    expose:
      - "3000"
    command: npm run dev -- --port 3000 --host 0.0.0.0
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - web
    <<: *defaults

volumes:
  caddy_data:
  caddy_config:

networks:
  web:

configs:
  caddy_config:
    content: |
      voulais.duckdns.org {
          # Enable automatic HTTPS
          tls {
              dns duckdns {$DUCKDNS_API_TOKEN}
          }
          
          # Enable compression
          encode zstd gzip
          
          # Handle all requests
          handle {
              # Reverse proxy to your application
              reverse_proxy cos-jamo:3000
          }
          
          # Basic security headers
          header {
              # Enable HSTS
              Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
              # Prevent browsers from sniffing MIME types
              X-Content-Type-Options "nosniff"
              # XSS protection
              X-XSS-Protection "1; mode=block"
              # Click-jacking protection
              X-Frame-Options "DENY"
          }
          
          # Enable logging
          log {
              output file /var/log/caddy/access.log
              format console
          }
      }